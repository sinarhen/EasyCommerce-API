{
	"info": {
		"_postman_id": "a20f3a26-b6c7-438c-aaf8-3259d1a629fd",
		"name": "Seller",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24030809",
		"_collection_link": "https://www.postman.com/warped-zodiac-240076/workspace/ecommerce/collection/24030809-a20f3a26-b6c7-438c-aaf8-3259d1a629fd?action=share&source=collection_link&creator=24030809"
	},
	"item": [
		{
			"name": "RegisterUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseBody = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"\r",
							"});\r",
							"\r",
							"var responseEmail = responseBody.email;\r",
							"var responseToken = responseBody.token;\r",
							"\r",
							"var reqBody = JSON.parse(pm.request.body.raw)\r",
							"var requestPassword = reqBody.password;\r",
							"\r",
							"pm.collectionVariables.set(\"createdUserEmail\", responseEmail);\r",
							"pm.collectionVariables.set(\"createdUserToken\", responseToken);\r",
							"pm.collectionVariables.set(\"createdUserPassword\", requestPassword\r",
							");\r",
							"pm.collectionVariables.set(\r",
							"    \"createdUserId\",\r",
							"    responseBody.id\r",
							")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{$randomUserName}}\",\r\n  \"firstName\": \"{{$randomFullName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/register",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpgradeToSeller",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{createdUserToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"{{$randomJobDescriptor}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"phoneNumber\": \"{{$randomPhoneNumber}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/customer/upgrade",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"customer",
						"upgrade"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginAsAdmin Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseToken = pm.response.json().token;\r",
							"\r",
							"pm.collectionVariables.set(\"adminToken\", responseToken)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpgradeRequests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"const id = response[0].id\r",
							"\r",
							"pm.collectionVariables.set(\"lastUpgradeRequestId\", id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/admin/users/upgrade-requests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin",
						"users",
						"upgrade-requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLastUpgradeRequestDetails",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/admin/users/upgrade-requests/{{lastUpgradeRequestId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin",
						"users",
						"upgrade-requests",
						"{{lastUpgradeRequestId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ApproveLastUpgradeRequest",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"Approved\",\r\n    \"message\": \"GL!!\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/admin/users/upgrade-requests/{{lastUpgradeRequestId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin",
						"users",
						"upgrade-requests",
						"{{lastUpgradeRequestId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLastUpgradeRequestDetails Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/admin/users/upgrade-requests/{{lastUpgradeRequestId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin",
						"users",
						"upgrade-requests",
						"{{lastUpgradeRequestId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "EnsureUserStatusIsSeller",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/admin/users/{{createdUserId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"admin",
						"users",
						"{{createdUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "RefreshToken",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const token = pm.response.json().token;\r",
							"\r",
							"pm.collectionVariables.set(\"createdUserToken\", token);\r",
							"\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - token and expiration\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.token).to.exist;\r",
							"    pm.expect(responseData.expiration).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Token is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Expiration is in a valid date format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.expiration).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/, \"Expiration should be in valid date format\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{createdUserToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{createdUserEmail}}\",\r\n    \"password\": \"{{createdUserPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/refresh-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"refresh-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSellerInfoAsAdmin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{createdUserToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/seller",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"seller"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "createdUserEmail",
			"value": ""
		},
		{
			"key": "createdUserToken",
			"value": ""
		},
		{
			"key": "createdUserPassword",
			"value": ""
		},
		{
			"key": "createdUserId",
			"value": ""
		},
		{
			"key": "adminToken",
			"value": ""
		},
		{
			"key": "lastUpgradeRequestId",
			"value": ""
		}
	]
}